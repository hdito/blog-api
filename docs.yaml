openapi: 3.0.0
info:
  title: REST API for a blog
  version: 1.0.0
servers:
  - url: https://blog-api-production-3e1e.up.railway.app/api
    description: Production server
  - url: http://localhost:3000/api
    description: Development server
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    Post:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        content:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
    PostWithPopulatedAuthor:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        content:
          type: string
        author:
          type: object
          properties:
            _id:
              type: string
            displayName:
              type: string
        createdAt:
          type: string
        updatedAt:
          type: string
    Error:
      type: object
      properties:
        status:
          type: string
          enum:
            - error
        message:
          type: string
    SuccessResponseWithEmptyPayload:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
        data:
          type: object
          nullable: true
    Comment:
      type: object
      properties:
        body:
          type: string
        author:
          type: string
        postId:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
    CommentWithPopulatedAuthor:
      type: object
      properties:
        body:
          type: string
        author:
          type: object
          properties:
            _id:
              type: string
            displayName:
              type: string
        postId:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
  responses:
    BadRequest:
      description: The form data is invalid.
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              data:
                type: array
                items:
                  type: object
                  properties:
                    path:
                      type: string
                    message:
                      type: string
    UnknownError:
      description: An unknown error has occured on a server.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Unauthorized:
      description: User is not authorized.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Forbidden:
      description: User has no access for this route.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NotFound:
      description: Data is not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
paths:
  /posts:
    get:
      summary: Returns a list of published posts.
      parameters:
        - in: query
          name: populate
          schema:
            type: string
            enum: [author]
          description: Populated fields on a post
      responses:
        "200":
          description: Returns an array of posts.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - "success"
                  data:
                    type: object
                    properties:
                      posts:
                        type: array
                        items:
                          oneOf:
                            - $ref: "#/components/schemas/PostWithPopulatedAuthor"
                            - $ref: "#/components/schemas/Post"
        "500":
          $ref: "#/components/responses/UnknownError"
    post:
      summary: Creates a new post.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                content:
                  type: string
                isPublished:
                  type: boolean
              required:
                - title
      responses:
        "200":
          description: Returns a created post.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - "success"
                  data:
                    type: object
                    properties:
                      post:
                        $ref: "#/components/schemas/Post"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: "#/components/responses/UnknownError"
  /posts/{postId}:
    get:
      summary: Returns a post.
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID of a post to return
        - in: query
          name: populate
          schema:
            type: string
            enum: [author]
          description: Populated fields on a post
      responses:
        "200":
          description: Returns a post object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - "success"
                  data:
                    type: object
                    properties:
                      post:
                        oneOf:
                          - $ref: "#/components/schemas/Post"
                          - $ref: "#/components/schemas/PostWithPopulatedAuthor"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/UnknownError"
    patch:
      summary: Updates a post with a new data.
      description: Allows authors and admins to update a post.
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: An ID of a post to update.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                content:
                  type: string
                isPublished:
                  type: boolean
      responses:
        "200":
          description: An update of a post has been successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - "success"
                  data:
                    type: object
                    nullable: true
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: "#/components/responses/UnknownError"
    delete:
      summary: Removes a post from a database.
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID of a post to delete.
      responses:
        "204":
          description: Deleting of a post has been successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponseWithEmptyPayload"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: "#/components/responses/UnknownError"
  /posts/{postId}/comments:
    get:
      summary: Returns a list of comments from a specified post.
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID of a post to get comments.
      responses:
        "200":
          description: Returns an array of comments.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - success
                  data:
                    type: object
                    properties:
                      comments:
                        type: array
                        items:
                          $ref: "#/components/schemas/CommentWithPopulatedAuthor"
        "500":
          $ref: "#/components/responses/UnknownError"
    post:
      summary: Creates a new comment for specified post.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                body:
                  type: string
              required:
                - body
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID of a post to create a comment.
      security:
        - BearerAuth: []
      responses:
        "200":
          description: New comment has been successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - success
                  data:
                    type: object
                    properties:
                      comment:
                        $ref: "#/components/schemas/Comment"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/UnknownError"
  /posts/{postId}/comments/{commentId}:
    delete:
      summary: Deletes a comment for a post.
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID of a post with a comment to delete.
        - in: path
          name: commentId
          schema:
            type: string
          required: true
          description: ID of a comment to delete.
      responses:
        "204":
          description: Comment has been successfully deleted.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponseWithEmptyPayload"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: "#/components/responses/UnknownError"
  /my-posts:
    get:
      summary: Returns a list of user's posts.
      parameters:
        - in: query
          name: populate
          schema:
            type: string
            enum:
              - author
          description: Spiecifies populated fields in post.
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Returns an array of user's post.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - success
                  data:
                    type: object
                    properties:
                      posts:
                        type: array
                        items:
                          oneOf:
                            - $ref: "#/components/schemas/Post"
                            - $ref: "#/components/schemas/PostWithPopulatedAuthor"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/UnknownError"
    /my-posts/{postId}:
      get:
        summary: Returns a user's post.
        security:
          - BearerAuth: []
        parameters:
          - in: query
            name: populate
            schema:
              type: string
              enum:
                - author
            description: Spiecifies populated fields in post.
          - in: path
            name: postId
            schema:
              type: string
            required: true
            description: ID of a post to return.
        responses:
          "200":
            description: Returns a user's post object.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - success
                    data:
                      type: object
                      properties:
                        post:
                          oneOf:
                            - $ref: "#/components/schemas/Post"
                            - $ref: "#/components/schemas/PostWithPopulatedAuthor"
          "401":
            $ref: "#/components/responses/Unauthorized"
          "403":
            $ref: "#/components/responses/Forbidden"
          "500":
            $ref: "#/components/responses/UnknownError"
